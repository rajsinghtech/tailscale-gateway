// Code generated by protoc-gen-go. DO NOT EDIT.
// This is a minimal stub implementation to allow compilation.
// A proper protobuf generation setup would be needed for production.

package proto

import (
	"context"

	clusterv3 "github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3"
	listenerv3 "github.com/envoyproxy/go-control-plane/envoy/config/listener/v3"
	routev3 "github.com/envoyproxy/go-control-plane/envoy/config/route/v3"
	tlsv3 "github.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tls/v3"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

// Stub protobuf message types

type PostRouteModifyRequest struct {
	Route            *routev3.Route
	PostRouteContext *PostRouteExtensionContext
}

type PostRouteModifyResponse struct {
	Route *routev3.Route
}

type PostVirtualHostModifyRequest struct {
	VirtualHost            *routev3.VirtualHost
	PostVirtualHostContext *PostVirtualHostExtensionContext
}

type PostVirtualHostModifyResponse struct {
	VirtualHost *routev3.VirtualHost
}

type PostHTTPListenerModifyRequest struct {
	Listener            *listenerv3.Listener
	PostListenerContext *PostHTTPListenerExtensionContext
}

type PostHTTPListenerModifyResponse struct {
	Listener *listenerv3.Listener
}

type PostTranslateModifyRequest struct {
	PostTranslateContext *PostTranslateExtensionContext
	Clusters             []*clusterv3.Cluster
	Secrets              []*tlsv3.Secret
}

type PostTranslateModifyResponse struct {
	Clusters []*clusterv3.Cluster
	Secrets  []*tlsv3.Secret
}

type PostRouteExtensionContext struct {
	GatewayName      string
	GatewayNamespace string
	Domains          []string
}

type PostVirtualHostExtensionContext struct {
	GatewayName      string
	GatewayNamespace string
	Domains          []string
}

type PostHTTPListenerExtensionContext struct {
	GatewayName      string
	GatewayNamespace string
	ListenerName     string
}

type PostTranslateExtensionContext struct {
	GatewayName      string
	GatewayNamespace string
}

// Stub gRPC service interface

type EnvoyGatewayExtensionServer interface {
	PostRouteModify(ctx context.Context, req *PostRouteModifyRequest) (*PostRouteModifyResponse, error)
	PostVirtualHostModify(ctx context.Context, req *PostVirtualHostModifyRequest) (*PostVirtualHostModifyResponse, error)
	PostHTTPListenerModify(ctx context.Context, req *PostHTTPListenerModifyRequest) (*PostHTTPListenerModifyResponse, error)
	PostTranslateModify(ctx context.Context, req *PostTranslateModifyRequest) (*PostTranslateModifyResponse, error)
}

type UnimplementedEnvoyGatewayExtensionServer struct{}

func (UnimplementedEnvoyGatewayExtensionServer) PostRouteModify(ctx context.Context, req *PostRouteModifyRequest) (*PostRouteModifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostRouteModify not implemented")
}

func (UnimplementedEnvoyGatewayExtensionServer) PostVirtualHostModify(ctx context.Context, req *PostVirtualHostModifyRequest) (*PostVirtualHostModifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostVirtualHostModify not implemented")
}

func (UnimplementedEnvoyGatewayExtensionServer) PostHTTPListenerModify(ctx context.Context, req *PostHTTPListenerModifyRequest) (*PostHTTPListenerModifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostHTTPListenerModify not implemented")
}

func (UnimplementedEnvoyGatewayExtensionServer) PostTranslateModify(ctx context.Context, req *PostTranslateModifyRequest) (*PostTranslateModifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostTranslateModify not implemented")
}

// Stub registration function
func RegisterEnvoyGatewayExtensionServer(s *grpc.Server, srv EnvoyGatewayExtensionServer) {
	// This would normally register the gRPC service
	// For now, this is a stub
}
