name: Helm Chart Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  CHART_NAME: tailscale-gateway-operator

jobs:
  helm-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: 'latest'

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Generate manifests and charts
      run: make generate-all

    - name: Update chart version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        sed -i "s/version: .*/version: ${VERSION#v}/" cmd/main/deploy/chart/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: \"${VERSION}\"/" cmd/main/deploy/chart/Chart.yaml

    - name: Log in to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin

    - name: Package and push Helm chart
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        helm package cmd/main/deploy/chart --version ${VERSION#v} --app-version ${VERSION}
        helm push ${CHART_NAME}-${VERSION#v}.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts

    - name: Upload chart to release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ env.CHART_NAME }}-${{ github.ref_name }}.tgz
        asset_name: ${{ env.CHART_NAME }}-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip