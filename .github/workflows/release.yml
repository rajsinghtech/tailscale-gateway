name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Generate manifests and charts
      run: make generate-all

    - name: Build and push Docker image (main operator)
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Extract metadata for extension server
      id: meta-ext
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-extension-server
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push extension server image
      id: push-ext
      uses: docker/build-push-action@v6
      with:
        context: .
        file: cmd/extension-server/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-ext.outputs.tags }}
        labels: ${{ steps.meta-ext.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation (main)
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

    - name: Generate artifact attestation (extension server)
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-extension-server
        subject-digest: ${{ steps.push-ext.outputs.digest }}
        push-to-registry: true

    - name: Update deployment manifests with release tag
      run: |
        VERSION=${{ github.event.release.tag_name }}
        # Update the image tags in generated manifests
        sed -i "s|ghcr.io/rajsinghtech/tailscale-gateway.*:.*|ghcr.io/rajsinghtech/tailscale-gateway:${VERSION}|g" cmd/main/deploy/manifests/operator.yaml
        sed -i "s|ghcr.io/rajsinghtech/tailscale-gateway-extension-server:.*|ghcr.io/rajsinghtech/tailscale-gateway-extension-server:${VERSION}|g" cmd/main/deploy/manifests/operator.yaml