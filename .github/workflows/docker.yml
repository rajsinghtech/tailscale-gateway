name: Build & Publish Docker Images

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Enable multi-arch builds (qemu)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Buildx with default settings â€“ reliable out-of-the-box
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GHCR (skip on PRs)
      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Determine tags/labels once
      - name: Docker meta (operator)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=true
            type=sha
            type=ref,event=tag

      # Build & push operator image
      - name: Build & push (operator)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build & push extension-server image
      - name: Docker meta (extension server)
        id: meta_ext
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-extension-server
          tags: |
            type=raw,value=latest,enable=true
            type=sha
            type=ref,event=tag

      - name: Build & push (extension server)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: cmd/extension-server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_ext.outputs.tags }}
          labels: ${{ steps.meta_ext.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max