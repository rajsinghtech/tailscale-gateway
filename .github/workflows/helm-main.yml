name: Update Helm Chart for Main Branch

on:
  push:
    branches: [ "main" ]
    paths:
      - 'cmd/main/deploy/chart/**'
      - '.github/workflows/helm-main.yml'

env:
  REGISTRY: ghcr.io
  CHART_NAME: tailscale-gateway-operator

jobs:
  update-helm-latest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: 'latest'

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Verify generated files exist
      run: |
        if [ ! -f "api/v1alpha1/zz_generated.deepcopy.go" ]; then
          echo "Error: Generated deepcopy file missing. Please run 'make generate' and commit."
          exit 1
        fi
        echo "Generated files verification passed âœ“"

    - name: Update chart for latest images
      run: |
        # Update values.yaml to use latest tags for main branch
        sed -i 's/tag: ""/tag: "latest"/g' cmd/main/deploy/chart/values.yaml
        
        # Update chart version to include commit SHA for main branch builds
        COMMIT_SHA=$(git rev-parse --short HEAD)
        CHART_VERSION="0.1.0-main-${COMMIT_SHA}"
        sed -i "s/version: .*/version: ${CHART_VERSION}/" cmd/main/deploy/chart/Chart.yaml
        sed -i 's/appVersion: .*/appVersion: "latest"/' cmd/main/deploy/chart/Chart.yaml

    - name: Log in to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin

    - name: Package and push Helm chart (latest)
      run: |
        COMMIT_SHA=$(git rev-parse --short HEAD)
        CHART_VERSION="0.1.0-main-${COMMIT_SHA}"
        
        # Package chart with main branch version
        helm package cmd/main/deploy/chart --version ${CHART_VERSION} --app-version latest
        
        # Push to OCI registry
        helm push ${CHART_NAME}-${CHART_VERSION}.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts
        
        echo "Published Helm chart: ${CHART_NAME}:${CHART_VERSION}"