apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-gateway-config
  namespace: envoy-gateway-system
data:
  envoy-gateway.yaml: |
    apiVersion: gateway.envoyproxy.io/v1alpha1
    kind: EnvoyGateway
    provider:
      type: Kubernetes
    gateway:
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
    extensionApis:
      enableEnvoyPatchPolicy: true
      enableBackend: true
    extensionManager:
      maxMessageSize: 1000M
      hooks:
        xdsTranslator:
          post:
          - VirtualHost
          - Translation
      service:
        fqdn:
          hostname: tailscale-gateway-extension-server.default.svc.cluster.local
          port: 5005
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: tailscale-gateway
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: tailscale-gateway
  namespace: tailscale-gateway-system
spec:
  gatewayClassName: tailscale-gateway
  listeners:
  - name: http
    protocol: HTTP
    port: 80
  - name: https
    protocol: HTTPS
    port: 443
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        name: tailscale-gateway-tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: tailscale-egress-routes
  namespace: tailscale-gateway-system
spec:
  parentRefs:
  - name: tailscale-gateway
  hostnames:
  - "*.tailscale.local"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: "/api/"
    backendRefs:
    - name: default-backend
      port: 80
      weight: 100
  - matches:
    - path:
        type: PathPrefix
        value: "/"
    backendRefs:
    - name: default-backend
      port: 80
      weight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: default-backend
  namespace: tailscale-gateway-system
spec:
  selector:
    app: default-backend
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-backend
  namespace: tailscale-gateway-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: default-backend
  template:
    metadata:
      labels:
        app: default-backend
    spec:
      containers:
      - name: backend
        image: nginx:alpine
        ports:
        - containerPort: 8080
        command: ["/bin/sh"]
        args: 
        - -c
        - |
          cat > /etc/nginx/nginx.conf << 'EOF'
          events {}
          http {
            server {
              listen 8080;
              location / {
                return 200 'Default backend for Tailscale Gateway\n';
                add_header Content-Type text/plain;
              }
            }
          }
          EOF
          nginx -g 'daemon off;'