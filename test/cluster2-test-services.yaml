apiVersion: v1
kind: Namespace
metadata:
  name: test-apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-service
  namespace: test-apps
spec:
  replicas: 2
  selector:
    matchLabels:
      app: echo-service
      cluster: cluster2
  template:
    metadata:
      labels:
        app: echo-service
        cluster: cluster2
    spec:
      containers:
      - name: echo
        image: mendhak/http-https-echo:latest
        ports:
        - containerPort: 8080
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: CLUSTER_NAME
          value: "cluster2"
---
apiVersion: v1
kind: Service
metadata:
  name: echo-service
  namespace: test-apps
  labels:
    app: echo-service
    cluster: cluster2
spec:
  selector:
    app: echo-service
    cluster: cluster2
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: echo-route
  namespace: test-apps
spec:
  parentRefs:
  - name: eg
    namespace: envoy-gateway-system
  hostnames:
  - "echo.test.local"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: echo-service
      port: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cluster2-echo-ss
  namespace: test-apps
spec:
  serviceName: cluster2-echo-ss
  replicas: 1
  selector:
    matchLabels:
      app: cluster2-echo-ss
  template:
    metadata:
      labels:
        app: cluster2-echo-ss
    spec:
      containers:
      - name: tailscale
        image: tailscale/tailscale:latest
        env:
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-oauth
              key: TS_OAUTH_CLIENT_SECRET
        - name: TS_HOSTNAME
          value: "cluster2-echo"
        - name: TS_ROUTES
          value: "echo-service.test-apps.svc.cluster.local:80/tcp"
        - name: TS_STATE_DIR
          value: "/var/lib/tailscale"
        volumeMounts:
        - name: tailscale-state
          mountPath: /var/lib/tailscale
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: tailscale-state
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi