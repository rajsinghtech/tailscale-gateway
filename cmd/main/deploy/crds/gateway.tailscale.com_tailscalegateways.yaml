---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: tailscalegateways.gateway.tailscale.com
spec:
  group: gateway.tailscale.com
  names:
    kind: TailscaleGateway
    listKind: TailscaleGatewayList
    plural: tailscalegateways
    singular: tailscalegateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the Tailscale Gateway.
      jsonPath: .status.conditions[?(@.type == "Ready")].reason
      name: Status
      type: string
    - description: Associated Envoy Gateway.
      jsonPath: .spec.gatewayRef.name
      name: Gateway
      type: string
    - description: Associated Tailnet.
      jsonPath: .spec.tailnetRef.name
      name: Tailnet
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          TailscaleGateway integrates Envoy Gateway with Tailscale networking,
          enabling dynamic route injection based on tailnet topology.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TailscaleGatewaySpec defines the desired state of TailscaleGateway
            properties:
              extensionServer:
                description: |-
                  ExtensionServer configures the gRPC extension server that implements
                  Envoy Gateway xDS hooks for dynamic route injection.
                properties:
                  port:
                    description: |-
                      Port is the port number for the gRPC extension server.
                      Defaults to 8443.
                    format: int32
                    type: integer
                  tls:
                    description: TLS configures TLS settings for the extension server.
                    properties:
                      certificateRef:
                        description: CertificateRef is a reference to a Secret containing
                          TLS certificates.
                        properties:
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Secret
                            description: Kind is kind of the referent. For example
                              "Secret".
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the referenced object. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - name
                        type: object
                      insecureSkipVerify:
                        description: |-
                          InsecureSkipVerify disables TLS certificate verification.
                          Should only be used for development/testing.
                        type: boolean
                    type: object
                type: object
              gatewayRef:
                description: |-
                  GatewayRef is a reference to the Envoy Gateway that this
                  TailscaleGateway should integrate with.
                properties:
                  group:
                    default: gateway.networking.k8s.io
                    description: |-
                      Group is the group of the referent.
                      When unspecified, "gateway.networking.k8s.io" is inferred.
                      To set the core API group (such as for a "Service" kind referent),
                      Group must be explicitly set to "" (empty string).

                      Support: Core
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    default: Gateway
                    description: |-
                      Kind is kind of the referent.

                      There are two kinds of parent resources with "Core" support:

                      * Gateway (Gateway conformance profile)
                      * Service (Mesh conformance profile, experimental, ClusterIP Services only)

                      Support for other resources is Implementation-Specific.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: |-
                      Name is the name of the referent.

                      Support: Core
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referent. When unspecified, this refers
                      to the local namespace of the Route.

                      Note that there are specific rules for ParentRefs which cross namespace
                      boundaries. Cross-namespace references are only valid if they are explicitly
                      allowed by something in the namespace they are referring to. For example:
                      Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                      generic way to enable any other kind of cross-namespace reference.

                      <gateway:experimental:description>
                      ParentRefs from a Route to a Service in the same namespace are "producer"
                      routes, which apply default routing rules to inbound connections from
                      any namespace to the Service.

                      ParentRefs from a Route to a Service in a different namespace are
                      "consumer" routes, and these routing rules are only applied to outbound
                      connections originating from the same namespace as the Route, for which
                      the intended destination of the connections are a Service targeted as a
                      ParentRef of the Route.
                      </gateway:experimental:description>

                      Support: Core
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  port:
                    description: |-
                      Port is the network port this Route targets. It can be interpreted
                      differently based on the type of parent resource.

                      When the parent resource is a Gateway, this targets all listeners
                      listening on the specified port that also support this kind of Route(and
                      select this Route). It's not recommended to set `Port` unless the
                      networking behaviors specified in a Route must apply to a specific port
                      as opposed to a listener(s) whose port(s) may be changed. When both Port
                      and SectionName are specified, the name and port of the selected listener
                      must match both specified values.

                      <gateway:experimental:description>
                      When the parent resource is a Service, this targets a specific port in the
                      Service spec. When both Port (experimental) and SectionName are specified,
                      the name and port of the selected port must match both specified values.
                      </gateway:experimental:description>

                      Implementations MAY choose to support other parent resources.
                      Implementations supporting other types of parent resources MUST clearly
                      document how/if Port is interpreted.

                      For the purpose of status, an attachment is considered successful as
                      long as the parent resource accepts it partially. For example, Gateway
                      listeners can restrict which Routes can attach to them by Route kind,
                      namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                      from the referencing Route, the Route MUST be considered successfully
                      attached. If no Gateway listeners accept attachment from this Route,
                      the Route MUST be considered detached from the Gateway.

                      Support: Extended

                      <gateway:experimental>
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  sectionName:
                    description: |-
                      SectionName is the name of a section within the target resource. In the
                      following resources, SectionName is interpreted as the following:

                      * Gateway: Listener Name. When both Port (experimental) and SectionName
                      are specified, the name and port of the selected listener must match
                      both specified values.
                      * Service: Port Name. When both Port (experimental) and SectionName
                      are specified, the name and port of the selected listener must match
                      both specified values. Note that attaching Routes to Services as Parents
                      is part of experimental Mesh support and is not supported for any other
                      purpose.

                      Implementations MAY choose to support attaching Routes to other resources.
                      If that is the case, they MUST clearly document how SectionName is
                      interpreted.

                      When unspecified (empty string), this will reference the entire resource.
                      For the purpose of status, an attachment is considered successful if at
                      least one section in the parent resource accepts it. For example, Gateway
                      listeners can restrict which Routes can attach to them by Route kind,
                      namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                      the referencing Route, the Route MUST be considered successfully
                      attached. If no Gateway listeners accept attachment from this Route, the
                      Route MUST be considered detached from the Gateway.

                      Support: Core
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - name
                type: object
              routeDiscovery:
                description: |-
                  RouteDiscovery configures how routes from the tailnet should be
                  discovered and injected into the gateway.
                properties:
                  deviceSelector:
                    description: |-
                      DeviceSelector selects which tailnet devices should have their
                      routes discovered and injected.
                    properties:
                      excludeTags:
                        description: ExcludeTags excludes devices that have any of
                          the specified tags.
                        items:
                          type: string
                        type: array
                      hostnames:
                        description: |-
                          Hostnames selects devices by hostname patterns.
                          Supports wildcards (*) for pattern matching.
                        items:
                          type: string
                        type: array
                      tags:
                        description: Tags selects devices that have any of the specified
                          tags.
                        items:
                          type: string
                        type: array
                    type: object
                  enabled:
                    description: Enabled determines if route discovery is active.
                    type: boolean
                  routeFilters:
                    description: RouteFilters define which discovered routes should
                      be included/excluded.
                    items:
                      description: RouteFilter defines include/exclude rules for discovered
                        routes
                      properties:
                        cidrs:
                          description: CIDRs are network ranges to include or exclude.
                          items:
                            type: string
                          type: array
                        hostnames:
                          description: |-
                            Hostnames are hostname patterns to include or exclude.
                            Supports wildcards (*) for pattern matching.
                          items:
                            type: string
                          type: array
                        type:
                          description: Type specifies whether this is an include or
                            exclude filter.
                          enum:
                          - include
                          - exclude
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  syncInterval:
                    description: |-
                      SyncInterval is how often to refresh route discovery.
                      Defaults to 30s.
                    type: string
                type: object
              tailnetRef:
                description: |-
                  TailnetRef is a reference to the TailscaleTailnet that provides
                  the tailnet connection and credentials.
                properties:
                  name:
                    description: Name is the name of the TailscaleTailnet resource.
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the TailscaleTailnet resource.
                      If not specified, defaults to the same namespace as the TailscaleGateway.
                    type: string
                required:
                - name
                type: object
            required:
            - gatewayRef
            - tailnetRef
            type: object
          status:
            description: TailscaleGatewayStatus defines the observed state of TailscaleGateway
            properties:
              conditions:
                description: Conditions represent the current state of the TailscaleGateway.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              discoveredRoutes:
                description: |-
                  DiscoveredRoutes contains information about routes discovered
                  from the tailnet and injected into the gateway.
                properties:
                  count:
                    description: Count is the number of routes currently discovered
                      and active.
                    format: int32
                    type: integer
                  lastDiscoveryTime:
                    description: LastDiscoveryTime is when routes were last discovered.
                    format: date-time
                    type: string
                  routes:
                    description: Routes contains details about discovered routes.
                    items:
                      description: DiscoveredRoute represents a route discovered from
                        a tailnet device
                      properties:
                        deviceHostname:
                          description: DeviceHostname is the hostname of the tailnet
                            device.
                          type: string
                        deviceIP:
                          description: DeviceIP is the tailnet IP of the device.
                          type: string
                        routes:
                          description: Routes are the network routes advertised by
                            this device.
                          items:
                            type: string
                          type: array
                        tags:
                          description: Tags are the tags associated with the device.
                          items:
                            type: string
                          type: array
                      required:
                      - deviceHostname
                      - deviceIP
                      - routes
                      type: object
                    type: array
                required:
                - count
                type: object
              extensionServerStatus:
                description: ExtensionServerStatus contains information about the
                  extension server.
                properties:
                  address:
                    description: Address is the address the extension server is listening
                      on.
                    type: string
                  lastHookCall:
                    description: LastHookCall is the timestamp of the last successful
                      hook call.
                    format: date-time
                    type: string
                  ready:
                    description: Ready indicates if the extension server is ready
                      to accept connections.
                    type: boolean
                required:
                - ready
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
