{{- if .Values.extensionServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tailscale-gateway-operator.fullname" . }}-extension-server
  namespace: {{ include "tailscale-gateway-operator.namespace" . }}
  labels:
    {{- include "tailscale-gateway-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: extension-server
spec:
  replicas: {{ .Values.extensionServer.replicaCount }}
  selector:
    matchLabels:
      {{- include "tailscale-gateway-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: extension-server
  template:
    metadata:
      labels:
        {{- include "tailscale-gateway-operator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: extension-server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tailscale-gateway-operator.fullname" . }}-extension-server
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: extension-server
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
          runAsUser: 65532
        image: "{{ .Values.extensionServer.image.repository }}:{{ .Values.extensionServer.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.extensionServer.image.pullPolicy }}
        args:
        - --grpc-port={{ .Values.extensionServer.grpcPort }}
        - --health-probe-bind-address=:{{ .Values.extensionServer.healthProbePort }}
        - --metrics-bind-address=:{{ .Values.extensionServer.metricsPort }}
        - --leader-elect=false
        ports:
        - name: grpc
          containerPort: {{ .Values.extensionServer.grpcPort }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.extensionServer.metricsPort }}
          protocol: TCP
        - name: health
          containerPort: {{ .Values.extensionServer.healthProbePort }}
          protocol: TCP
        env:
        # Port configuration (following centralized config patterns)
        - name: GRPC_PORT
          value: "{{ .Values.extensionServer.grpcPort }}"
        - name: METRICS_PORT
          value: "{{ .Values.extensionServer.metricsPort }}"
        - name: HEALTH_PROBE_PORT
          value: "{{ .Values.extensionServer.healthProbePort }}"
        # Feature flags
        - name: ENABLE_METRICS
          value: "{{ .Values.metrics.enabled }}"
        - name: ENABLE_HEALTH_CHECKS
          value: "{{ .Values.healthProbe.enabled }}"
        - name: LOG_LEVEL
          value: "{{ .Values.logLevel }}"
        # Image configuration (for dynamic configuration if needed)
        - name: EXTENSION_SERVER_IMAGE
          value: "{{ .Values.extensionServer.image.repository }}:{{ .Values.extensionServer.image.tag | default .Chart.AppVersion }}"
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.extensionServer.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{- end }}